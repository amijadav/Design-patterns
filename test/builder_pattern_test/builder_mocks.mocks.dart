// Mocks generated by Mockito 5.4.4 from annotations
// in design_patterns/test/builder_pattern_test/builder_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:ui' as _i2;

import 'package:design_patterns/design_patterns/builder_pattern_example.dart'
    as _i4;
import 'package:flutter/material.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeColor_0 extends _i1.SmartFake implements _i2.Color {
  _FakeColor_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIconData_1 extends _i1.SmartFake implements _i3.IconData {
  _FakeIconData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCustomButtonBuilder_2 extends _i1.SmartFake
    implements _i4.CustomButtonBuilder {
  _FakeCustomButtonBuilder_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeButtonExample_3 extends _i1.SmartFake implements _i4.ButtonExample {
  _FakeButtonExample_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [CustomButtonBuilder].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomButtonBuilder extends _i1.Mock
    implements _i4.CustomButtonBuilder {
  MockCustomButtonBuilder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get label => (super.noSuchMethod(
        Invocation.getter(#label),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#label),
        ),
      ) as String);

  @override
  set label(String? _label) => super.noSuchMethod(
        Invocation.setter(
          #label,
          _label,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Color get backgroundColor => (super.noSuchMethod(
        Invocation.getter(#backgroundColor),
        returnValue: _FakeColor_0(
          this,
          Invocation.getter(#backgroundColor),
        ),
      ) as _i2.Color);

  @override
  set backgroundColor(_i2.Color? _backgroundColor) => super.noSuchMethod(
        Invocation.setter(
          #backgroundColor,
          _backgroundColor,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Color get borderColor => (super.noSuchMethod(
        Invocation.getter(#borderColor),
        returnValue: _FakeColor_0(
          this,
          Invocation.getter(#borderColor),
        ),
      ) as _i2.Color);

  @override
  set borderColor(_i2.Color? _borderColor) => super.noSuchMethod(
        Invocation.setter(
          #borderColor,
          _borderColor,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Color get fontColor => (super.noSuchMethod(
        Invocation.getter(#fontColor),
        returnValue: _FakeColor_0(
          this,
          Invocation.getter(#fontColor),
        ),
      ) as _i2.Color);

  @override
  set fontColor(_i2.Color? _fontColor) => super.noSuchMethod(
        Invocation.setter(
          #fontColor,
          _fontColor,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.IconData get icon => (super.noSuchMethod(
        Invocation.getter(#icon),
        returnValue: _FakeIconData_1(
          this,
          Invocation.getter(#icon),
        ),
      ) as _i3.IconData);

  @override
  set icon(_i3.IconData? _icon) => super.noSuchMethod(
        Invocation.setter(
          #icon,
          _icon,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onPressed(void Function()? _onPressed) => super.noSuchMethod(
        Invocation.setter(
          #onPressed,
          _onPressed,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.CustomButtonBuilder setLabel(String? label) => (super.noSuchMethod(
        Invocation.method(
          #setLabel,
          [label],
        ),
        returnValue: _FakeCustomButtonBuilder_2(
          this,
          Invocation.method(
            #setLabel,
            [label],
          ),
        ),
      ) as _i4.CustomButtonBuilder);

  @override
  _i4.CustomButtonBuilder setColor(_i2.Color? backgroundColor) =>
      (super.noSuchMethod(
        Invocation.method(
          #setColor,
          [backgroundColor],
        ),
        returnValue: _FakeCustomButtonBuilder_2(
          this,
          Invocation.method(
            #setColor,
            [backgroundColor],
          ),
        ),
      ) as _i4.CustomButtonBuilder);

  @override
  _i4.CustomButtonBuilder setBorderColor(_i2.Color? borderColor) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBorderColor,
          [borderColor],
        ),
        returnValue: _FakeCustomButtonBuilder_2(
          this,
          Invocation.method(
            #setBorderColor,
            [borderColor],
          ),
        ),
      ) as _i4.CustomButtonBuilder);

  @override
  _i4.CustomButtonBuilder setIcon(_i3.IconData? icon) => (super.noSuchMethod(
        Invocation.method(
          #setIcon,
          [icon],
        ),
        returnValue: _FakeCustomButtonBuilder_2(
          this,
          Invocation.method(
            #setIcon,
            [icon],
          ),
        ),
      ) as _i4.CustomButtonBuilder);

  @override
  _i4.CustomButtonBuilder setfontColor(_i2.Color? fontColor) =>
      (super.noSuchMethod(
        Invocation.method(
          #setfontColor,
          [fontColor],
        ),
        returnValue: _FakeCustomButtonBuilder_2(
          this,
          Invocation.method(
            #setfontColor,
            [fontColor],
          ),
        ),
      ) as _i4.CustomButtonBuilder);

  @override
  _i4.CustomButtonBuilder setOnPress(void Function()? onPressed) =>
      (super.noSuchMethod(
        Invocation.method(
          #setOnPress,
          [onPressed],
        ),
        returnValue: _FakeCustomButtonBuilder_2(
          this,
          Invocation.method(
            #setOnPress,
            [onPressed],
          ),
        ),
      ) as _i4.CustomButtonBuilder);

  @override
  _i4.ButtonExample build() => (super.noSuchMethod(
        Invocation.method(
          #build,
          [],
        ),
        returnValue: _FakeButtonExample_3(
          this,
          Invocation.method(
            #build,
            [],
          ),
        ),
      ) as _i4.ButtonExample);
}
